// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OconnorEvents.ShoppingBasket;

namespace OconnorEvents.ShoppingBasket.Migrations
{
    [DbContext(typeof(ShoppingBasketDbContext))]
    [Migration("20210502225647_updateSeedData")]
    partial class updateSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OconnorEvents.ShoppingBasket.Entities.Basket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("OconnorEvents.ShoppingBasket.Entities.BasketChangeEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BasketChangeType")
                        .HasColumnType("int");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("InsertedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("BasketChangeEvents");
                });

            modelBuilder.Entity("OconnorEvents.ShoppingBasket.Entities.BasketLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("TicketAmount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("EventId");

                    b.ToTable("BasketLines");
                });

            modelBuilder.Entity("OconnorEvents.ShoppingBasket.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Artist")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("VenueCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VenueCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VenueName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee272f8b-6096-4cb6-8625-bb4bb2d89e8b"),
                            Artist = "John Egbert",
                            Date = new DateTime(2021, 11, 2, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Join John for his farwell tour across 15 continents. John really needs no introduction since he has already mesmerized the world with his banjo.",
                            ImageUrl = "https://neilmorrisseypluralsight.blob.core.windows.net/imgs/banjo.jpg",
                            Name = "John Egbert Live",
                            Price = 65,
                            VenueCity = "Toronto",
                            VenueCountry = "Canada",
                            VenueName = "Massey Hall"
                        },
                        new
                        {
                            Id = new Guid("3448d5a4-0f72-4dd7-bf15-c14a46b26c00"),
                            Artist = "Michael Johnson",
                            Date = new DateTime(2022, 2, 2, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Michael Johnson doesn't need an introduction. His 25 concert across the globe last year were seen by thousands. Can we add you to the list?",
                            ImageUrl = "https://neilmorrisseypluralsight.blob.core.windows.net/imgs/michael.jpg",
                            Name = "The State of Affairs: Michael Live!",
                            Price = 85,
                            VenueCity = "Toronto",
                            VenueCountry = "Canada",
                            VenueName = "Massey Hall"
                        },
                        new
                        {
                            Id = new Guid("b419a7ca-3321-4f38-be8e-4d7b6a529319"),
                            Artist = "DJ 'The Mike'",
                            Date = new DateTime(2021, 9, 2, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "DJs from all over the world will compete in this epic battle for eternal fame.",
                            ImageUrl = "https://neilmorrisseypluralsight.blob.core.windows.net/imgs/dj.jpg",
                            Name = "Clash of the DJs",
                            Price = 85,
                            VenueCity = "Montreal",
                            VenueCountry = "Canada",
                            VenueName = "L'Olympia"
                        },
                        new
                        {
                            Id = new Guid("62787623-4c52-43fe-b0c9-b7044fb5929b"),
                            Artist = "Manuel Santinonisi",
                            Date = new DateTime(2021, 9, 2, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Get on the hype of Spanish Guitar concerts with Manuel.",
                            ImageUrl = "https://neilmorrisseypluralsight.blob.core.windows.net/imgs/guitar.jpg",
                            Name = "Spanish guitar hits with Manuel",
                            Price = 25,
                            VenueCity = "Montreal",
                            VenueCountry = "Canada",
                            VenueName = "L'Olympia"
                        },
                        new
                        {
                            Id = new Guid("1babd057-e980-4cb3-9cd2-7fdd9e525668"),
                            Artist = "Many",
                            Date = new DateTime(2022, 3, 2, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The best tech conference in the world",
                            ImageUrl = "https://neilmorrisseypluralsight.blob.core.windows.net/imgs/conf.jpg",
                            Name = "Techorama 2021",
                            Price = 400,
                            VenueCity = "Vancouver",
                            VenueCountry = "Canada",
                            VenueName = "Commodore Ballroom"
                        },
                        new
                        {
                            Id = new Guid("adc42c09-08c1-4d2c-9f96-2d15bb1af299"),
                            Artist = "Nick Sailor",
                            Date = new DateTime(2022, 1, 2, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The critics are over the moon and so will you after you've watched this sing and dance extravaganza written by Nick Sailor, the man from 'My dad and sister'.",
                            ImageUrl = "https://neilmorrisseypluralsight.blob.core.windows.net/imgs/musical.jpg",
                            Name = "To the Moon and Back",
                            Price = 135,
                            VenueCity = "Vancouver",
                            VenueCountry = "Canada",
                            VenueName = "Commodore Ballroom"
                        });
                });

            modelBuilder.Entity("OconnorEvents.ShoppingBasket.Entities.BasketLine", b =>
                {
                    b.HasOne("OconnorEvents.ShoppingBasket.Entities.Basket", "Basket")
                        .WithMany("BasketLines")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OconnorEvents.ShoppingBasket.Entities.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("OconnorEvents.ShoppingBasket.Entities.Basket", b =>
                {
                    b.Navigation("BasketLines");
                });
#pragma warning restore 612, 618
        }
    }
}
