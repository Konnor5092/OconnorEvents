// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OconnorEvents.ShoppingBasket;

namespace OconnorEvents.ShoppingBasket.Migrations
{
    [DbContext(typeof(ShoppingBasketDbContext))]
    [Migration("20210418084748_eventsSeeddata")]
    partial class eventsSeeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OconnorEvents.ShoppingBasket.Entities.Basket", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CouponId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("OconnorEvents.ShoppingBasket.Entities.BasketChangeEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BasketChangeType")
                        .HasColumnType("int");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("InsertedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("BasketChangeEvents");
                });

            modelBuilder.Entity("OconnorEvents.ShoppingBasket.Entities.BasketLine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("TicketAmount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BasketId");

                    b.HasIndex("EventId");

                    b.ToTable("BasketLines");
                });

            modelBuilder.Entity("OconnorEvents.ShoppingBasket.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ee272f8b-6096-4cb6-8625-bb4bb2d89e8b"),
                            Date = new DateTime(2021, 10, 18, 9, 47, 47, 732, DateTimeKind.Local).AddTicks(9692),
                            Name = "John Egbert Live"
                        },
                        new
                        {
                            Id = new Guid("3448d5a4-0f72-4dd7-bf15-c14a46b26c00"),
                            Date = new DateTime(2022, 1, 18, 9, 47, 47, 736, DateTimeKind.Local).AddTicks(3097),
                            Name = "The State of Affairs: Michael Live!"
                        },
                        new
                        {
                            Id = new Guid("b419a7ca-3321-4f38-be8e-4d7b6a529319"),
                            Date = new DateTime(2021, 8, 18, 9, 47, 47, 736, DateTimeKind.Local).AddTicks(3215),
                            Name = "Clash of the DJs"
                        },
                        new
                        {
                            Id = new Guid("62787623-4c52-43fe-b0c9-b7044fb5929b"),
                            Date = new DateTime(2021, 8, 18, 9, 47, 47, 736, DateTimeKind.Local).AddTicks(3297),
                            Name = "Spanish guitar hits with Manuel"
                        },
                        new
                        {
                            Id = new Guid("1babd057-e980-4cb3-9cd2-7fdd9e525668"),
                            Date = new DateTime(2022, 2, 18, 9, 47, 47, 736, DateTimeKind.Local).AddTicks(3315),
                            Name = "Techorama 2021"
                        },
                        new
                        {
                            Id = new Guid("adc42c09-08c1-4d2c-9f96-2d15bb1af299"),
                            Date = new DateTime(2021, 12, 18, 9, 47, 47, 736, DateTimeKind.Local).AddTicks(3339),
                            Name = "To the Moon and Back"
                        });
                });

            modelBuilder.Entity("OconnorEvents.ShoppingBasket.Entities.BasketLine", b =>
                {
                    b.HasOne("OconnorEvents.ShoppingBasket.Entities.Basket", "Basket")
                        .WithMany("BasketLines")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OconnorEvents.ShoppingBasket.Entities.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("OconnorEvents.ShoppingBasket.Entities.Basket", b =>
                {
                    b.Navigation("BasketLines");
                });
#pragma warning restore 612, 618
        }
    }
}
